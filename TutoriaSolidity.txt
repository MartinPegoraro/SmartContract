pragma solidity ^0.4.0;
contract Tutoria {
    
    struct tutoriaData{
        
        address profesor;
        address alumno;
        string materia;
        bool estaConfirmado;
        bool cancelar;
    }
    
    
       mapping (address => tutoriaData) tutorias;
    
    
    
    function solicitarTut (address prof, string mat) public{
       
        require(prof != msg.sender);
        //require (msg.sender != prof);
       
        tutoriaData tut = tutorias[msg.sender];
        
        tut.alumno= msg.sender;
        tut.profesor = prof;
        tut.materia = mat;
        tut.estaConfirmado = false;
        tut.cancelar = false;
        
        
        
    }
    
 

    function getProfesor() public view returns(address){
        return tutorias[msg.sender].profesor;
    }
    
    
    function getMateria() public view returns(string){
        return tutorias[msg.sender].materia;
    }
    
    
    function getAlumno() public view returns (address) {
        return tutorias[msg.sender].alumno;
    }
    
    
    function confirTut(address key) public returns (bool) {
        //tutoriaData tut= tutorias
        require(tutorias[key].profesor == msg.sender);
        
        require(tutorias[key].estaConfirmado == false);
        
        return tutorias[key].estaConfirmado = true;
    }
    
    
    function cancelarTut(address key) public returns (bool) {
        require(tutorias[key].alumno == msg.sender);
        require(tutorias[key].estaConfirmado == false);
        require(tutorias[key].cancelar == false);
        return tutorias[key].cancelar = true;
    }
    
    
    function estaConfirmadoTut() public view returns (bool){
        return tutorias[msg.sender].estaConfirmado;
    }
    
    
     function estaCanceladaTut() public view returns (bool){
        return tutorias[msg.sender].cancelar;
     }
     
     
}